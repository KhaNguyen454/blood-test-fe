import React from "react";
import { Button, Form, Input, Card } from "antd";
import { Link, useNavigate } from "react-router-dom";
import "./register.css";

function RegisterForm() {
  const navigate = useNavigate();

  const onFinish = async (values) => {
    console.log("ƒêƒÉng k√Ω:", values);
    navigate("/login");
  };

  return (
    <div className="auth-register-container">
      <div className="auth-register-left">
        <div className="auth-register-left-content">
          <h1 className="auth-register-welcome-title">HemaLink</h1>
          <p className="auth-register-subtitle">
            Ph√≤ng kh√°m hi·ªán ƒë·∫°i, k·∫øt n·ªëi ch·∫©n ƒëo√°n v√† ƒëi·ªÅu tr·ªã, mang ƒë·∫øn d·ªãch v·ª•
            y t·∫ø ch·∫•t l∆∞·ª£ng v√† ƒë√°ng tin c·∫≠y.
          </p>

          <div className="auth-register-features">
            <div className="auth-register-feature-item">
              <div className="auth-register-feature-icon">üß™</div>
              <div className="auth-register-feature-text">
                <h3>X√©t nghi·ªám nhanh ch√≥ng</h3>
                <p>H·ªá th·ªëng hi·ªán ƒë·∫°i, k·∫øt qu·∫£ ch√≠nh x√°c v√† k·ªãp th·ªùi</p>
              </div>
            </div>

            <div className="auth-register-feature-item">
              <div className="auth-register-feature-icon">üìã</div>
              <div className="auth-register-feature-text">
                <h3>Qu·∫£n l√Ω h·ªì s∆° d·ªÖ d√†ng</h3>
                <p>Theo d√µi l·ªãch s·ª≠ kh√°m ch·ªØa b·ªánh m·ªçi l√∫c, m·ªçi n∆°i</p>
              </div>
            </div>

            <div className="auth-register-feature-item">
              <div className="auth-register-feature-icon">üë®‚Äç‚öïÔ∏è</div>
              <div className="auth-register-feature-text">
                <h3>ƒê·ªôi ng≈© b√°c sƒ© gi√†u kinh nghi·ªám</h3>
                <p>T∆∞ v·∫•n t·∫≠n t√¨nh, h·ªó tr·ª£ chuy√™n s√¢u cho t·ª´ng b·ªánh nh√¢n</p>
              </div>
            </div>
          </div>

          {/* <div className="auth-register-stats">
            <div className="auth-register-stat-item">
              <h4>5000+</h4>
              <p>B·ªánh nh√¢n tin t∆∞·ªüng</p>
            </div>
            <div className="auth-register-stat-item">
              <h4>98%</h4>
              <p>T·ª∑ l·ªá h√†i l√≤ng</p>
            </div>
            <div className="auth-register-stat-item">
              <h4>24/7</h4>
              <p>ƒê·∫∑t l·ªãch v√† h·ªó tr·ª£</p>
            </div>
          </div> */}
        </div>
      </div>

      {/* Right Side - Register Form */}
      <div className="auth-register-form-section">
        <Card className="auth-register-card" title="ƒêƒÉng k√Ω t√†i kho·∫£n">
          <Form
            name="register"
            layout="vertical"
            onFinish={onFinish}
            autoComplete="off"
          >
            <Form.Item
              label="H·ªç v√† t√™n"
              name="fullname"
              rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p h·ªç t√™n!" }]}
            >
              <Input placeholder="Nh·∫≠p h·ªç v√† t√™n" size="large" />
            </Form.Item>

            <Form.Item
              label="Email"
              name="email"
              rules={[
                { required: true, message: "Vui l√≤ng nh·∫≠p email!" },
                { type: "email", message: "Email kh√¥ng h·ª£p l·ªá!" },
              ]}
            >
              <Input placeholder="Nh·∫≠p email" size="large" />
            </Form.Item>

            <Form.Item
              label="M·∫≠t kh·∫©u"
              name="password"
              rules={[
                { required: true, message: "Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u!" },
                { min: 6, message: "M·∫≠t kh·∫©u √≠t nh·∫•t 6 k√Ω t·ª±" },
              ]}
              hasFeedback
            >
              <Input.Password placeholder="Nh·∫≠p m·∫≠t kh·∫©u" size="large" />
            </Form.Item>

            <Form.Item
              label="X√°c nh·∫≠n m·∫≠t kh·∫©u"
              name="confirmPassword"
              dependencies={["password"]}
              hasFeedback
              rules={[
                { required: true, message: "Vui l√≤ng x√°c nh·∫≠n m·∫≠t kh·∫©u!" },
                ({ getFieldValue }) => ({
                  validator(_, value) {
                    if (!value || getFieldValue("password") === value) {
                      return Promise.resolve();
                    }
                    return Promise.reject(new Error("M·∫≠t kh·∫©u kh√¥ng kh·ªõp!"));
                  },
                }),
              ]}
            >
              <Input.Password placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u" size="large" />
            </Form.Item>

            <Form.Item>
              <Button type="primary" htmlType="submit" size="large" block>
                ƒêƒÉng k√Ω ngay
              </Button>
            </Form.Item>

            <div style={{ textAlign: "center" }}>
              ƒê√£ c√≥ t√†i kho·∫£n? <Link to="/login">ƒêƒÉng nh·∫≠p ngay</Link>
            </div>
          </Form>
        </Card>
      </div>
    </div>
  );
}

export default RegisterForm;
